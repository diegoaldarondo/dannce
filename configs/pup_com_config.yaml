# path to folder where randomly sampled images will be saved
RESULTSDIR: ./

# names of data files. must match the order of CAMNAMES below
datafile: ['CameraLmouse_MatchedFrames', 'CameraRmouse_MatchedFrames', 'CameraSmouse_MatchedFrames']
datadir: ./data/

# Names for each of the camera subdirectories in the video folder. Order should match the datafiles above.
CAMNAMES: ['CameraLmouse', 'CameraRmouse', 'CameraSmouse']
calib_file: ['hires_cam2_params.mat','hires_cam3_params.mat','hires_cam1_params.mat']

# Degree of downsampling applied to image input. Default 1.
DOWNFAC: 2

# Video file extension
extension: '.mp4'

# Path to the COM config file.
COM_CONFIG: ./COM/config.yaml

# How to crop the input images. For labeling, this is not strictly required
CROP_HEIGHT: [0, 1024]
CROP_WIDTH: [20, 1300]

# Number of channels for each input image (e.g. RGB == 3)
N_CHANNELS_IN: 3


######################################################################### COM 

_N_VIEWS: 3

# Number of network output channels.
N_CHANNELS_OUT: 1

# BATCH_SIZE*len(CAMNAMES) should be <= 6 for most COM training applications
BATCH_SIZE: 2

# Number of parallel workers serving data to the model
WORKERS: 2

# Max. number of batches in multi-processing queue
MAX_QUEUE_SIZE: 10

# DANNCE training option. Sets the size of the 3D Guassians (in mm) used as labels for the MAX models
SIGMA: 18

# DANNCE training option. Sets the number of epochs during training
EPOCHS: 1000

# DANNCE training option. Sets the verbosity of training output
VERBOSE: 1

# Degree of downsampling applied to image input. Default 1, other values untested.
DOWNFAC: 2

# DANNCE training option. Loss function to be used. Default MSE.
loss: mask_nan_keep_loss

# DANNCE training option. Learning rate for the Adam optimizer. Default 1e-3.
lr: 5e-5

# By default, will load in the first hdf5 file at this location for fine-tuning. If training from scratch, set to None
# weights: /n/holylfs02/LABS/olveczky_lab/Jesse/P21_pups/RecordingP21Pup_two/COM/train_results/
weights: null

# name of the network architecture (see nets.py)
net: unet2d_fullbn

# If true, each camera's video directory contains only the video files. If false, each camera's video directory contains an additional subdirectory, which then contains the video files
vid_dir_flag: False

# DANNCE training. Metric to be monitored in addition to loss
metric: mse

# Set the video extension
extension: .mp4

# How many samples from each animal do you want to (randomly) set aside for a validation metric?
num_validation_per_exp: 1

# If true, saves plots of the training labels overlaid on images
debug: False

# When using a system with multiple GPUs, we should just target one ofthem
gpuID: "0"

# Number of frames in each video file
chunks: 3500

# If present, write the confidence map output and image/COM overlays to disk during prediction
# COMdebug: CameraLmouse

# How many frames to you want to predict over? Set to 'max' for all video frames.
max_num_samples: 'max'

# For prediction, False means Matlab will do the undistort, True means python will do it (slower)
undistort: True

# Use this to select between downsampling modes. 'dsm' is the original (slow) downsample local mean, 'nn' is fast nearest neighbors
dsmode: dsm

# Medianfilter window
MEDFILT_WINDOW: 30