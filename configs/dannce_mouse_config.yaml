# File name of io.yaml file, which should exist in the directory from which you
# call dannce functions
io_config: io.yaml

# If training from scratch, set to the desired number of output channels (i.e. keypoints)
# If fine-tuning, this must match the previous number of output channels, and the new desired
# number is set by NEW_N_CHANNELS_OUT
N_CHANNELS_OUT: 20

# New number of network output channels.
NEW_N_CHANNELS_OUT: 22
# New size of the final output kernel
NEW_LAST_KERNEL_SIZE: [3,3,3]

# Batch size for training and prediction
BATCH_SIZE: 4

# DANNCE training option. Sets the number of epochs during training (default 1200)
EPOCHS: 600

# DANNCE training option. Learning rate for the Adam optimizer. Default 1e-3.
#lr: 1e-3

# name of the network architecture (see nets.py) 'unet3d_big' (from scratch?)
net: finetune_AVG

# Options:
# 'new': initializes and trains a network from scratch
# 'finetune': loads in pre-trained weights and fine-tuned from there
# 'continued': initializes a full model, including optimizer state, and continuous training from the last full model checkpoint
train_mode: finetune

# How many samples from each animal do you want to (randomly) set aside for a validation metric?
num_validation_per_exp: 4

# Limits (in mm) to 3D volumes anchored on subject
VMIN: -60
VMAX: 60
# Number of voxels along each spatial dimension
NVOX: 64

# max. number of batches to evaluate during prediction. set to 'max' to evaluate over all data/video frames
max_num_samples: 1000

# By default, will load in the first hdf5 file at this location for fine-tuning. If training from scratch, set to None
dannce_finetune_weights: ./DANNCE/weights/

#### When using com3d.pickle
# If the 3D COM has a coordinate beyond this value (in mm), discard it as an error. How large is your arena?
cthresh: 350

