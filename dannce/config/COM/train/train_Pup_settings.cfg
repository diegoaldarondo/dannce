# INPUT_WIDTH DEPRECATED. WILL REMOVE. For now, must match the cropped size of the input images
INPUT_WIDTH: 1280

# INPUT_HEIGHT DEPRECATED. WILL REMOVE. For now, must match the cropped size of the input images
INPUT_HEIGHT: 1024

# OUTPUT_WIDTH DEPRECATED. WILL REMOVE. For now, must match the cropped size of the input images
OUTPUT_WIDTH: 1280

# OUTPUT_HEIGHT DEPRECATED. WILL REMOVE. For now, must match the cropped size of the input images
OUTPUT_HEIGHT: 1024

# How to crop the input images. The U-Net expects each dimension size to be a multiple of 32.
CROP_HEIGHT: (0, 1024)
CROP_WIDTH: (20, 1300)

# Number of channels for each input image (e.g. RGB == 3)
N_CHANNELS_IN: 3

# Number of network output channels.
N_CHANNELS_OUT: 1

# BBOX_WIDTH DEPRECATED. WILL REMOVE. For now, must match the cropped size of the input images
BBOX_WIDTH: 1280

# BBOX_HEIGHT DEPRECATED. WILL REMOVE. For now, must match the cropped size of the input images
BBOX_HEIGHT: 1024

# Batch size -- default 1. And should stay 1 for most COM training applications
BATCH_SIZE: 1

# Number of parallel workers serving data to the model
WORKERS: 2

# Max. number of batches in multi-processing queue
MAX_QUEUE_SIZE: 10

# DANNCE training option. Sets the size of the 3D Guassians (in mm) used as labels for the MAX models
SIGMA: 10

# DANNCE training option. Sets the number of epochs during training
EPOCHS: 400

# DANNCE training option. Sets the verbosity of training output
VERBOSE: 1

# TILEFAC DEPRECATED. WILL REMOVE.
TILEFAC: 1

# Degree of downsampling applied to image input. Default 1, other values untested.
DOWNFAC: 2

# During prediction, OUT_MODE should be set to 'coordinates'. During training, OUT_MODE should be set to '3dprob' for MAX and 'coordinates' for AVG. 
OUT_MODE: 3dprob

# DANNCE training option. Loss function to be used. Default MSE.
loss: mask_nan_keep_loss

# DANNCE training option. Learning rate for the Adam optimizer. Default 1e-3.
lr: 5e-5

# path to the pre-trained weights file used for making predictions (or for fine-tuning from)
WEIGHTS: ./dannce/weights/weights.rat.MAX.hdf5

# name of the network architecture (see nets.py)
net: unet2d_fullbn

# If true, each camera's video directory contains only the video files. If false, each camera's video directory contains an additional subdirectory, which then contains the video files
vid_dir_flag: False

# DANNCE training. Metric to be monitored in addition to loss
metric: mse

# Set the video extension
extension: .mp4

# path to folder where DANNCE weights and logs will be saved
RESULTSDIR: ./dannce/demo/pup_COM_lockfirst/

# How many samples from each animal do you want to (randomly) set aside for a validation metric?
num_validation_per_exp: 5

# Path to weights used for fine-tuning. To train from scratch, should be None
weights: ./dannce/weights/weights.rat.COM.hdf5

# If true, saves plots of the training labels overlaid on images
debug: True